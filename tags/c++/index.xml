<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on brightzi</title>
    <link>http://brightzi.cn/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on brightzi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 17 Jan 2024 00:00:44 +0800</lastBuildDate>
    <atom:link href="http://brightzi.cn/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【C&#43;&#43;】智能指针</title>
      <link>http://brightzi.cn/posts/c&#43;&#43;%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</link>
      <pubDate>Wed, 17 Jan 2024 00:00:44 +0800</pubDate>
      <guid>http://brightzi.cn/posts/c&#43;&#43;%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</guid>
      <description>unique_ptr C++11引入了std::unique_ptr主要是为了提供一种在资源管理方面更为安全和高效的替代方案。std::unique_ptr是一</description>
    </item>
    <item>
      <title>状态机</title>
      <link>http://brightzi.cn/posts/%E7%8A%B6%E6%80%81%E6%9C%BA/</link>
      <pubDate>Tue, 16 Jan 2024 19:24:11 +0800</pubDate>
      <guid>http://brightzi.cn/posts/%E7%8A%B6%E6%80%81%E6%9C%BA/</guid>
      <description>C++状态机 #include &amp;lt;iostream&amp;gt; #include &amp;lt;unordered_map&amp;gt; #include &amp;lt;string&amp;gt; enum class PaymentEvent { PAY_CREATE, PAY_PROCESS, PAY_SUCCESS, PAY_FAIL }; class PaymentStatus { public: // 枚举状态 enum Status { INIT, PAYING, PAID, FAILED }; // 构造函数 PaymentStatus(Status status, const std::string&amp;amp; description) : status(status), description(description) {} // 获取目标状态 static Status getTargetStatus(Status sourceStatus, PaymentEvent event); // 打印状态</description>
    </item>
  </channel>
</rss>
